import time
import os
import io
from PIL.Image import Image as PILImage
from PIL import Image
from stability_sdk.client import StabilityInference
import stability_sdk.interfaces.gooseai.generation.generation_pb2 as generation


class AdultContentGenerationError(Exception):
    def __init__(self, message: str):
        super().__init__(message)


class NoImageGeneratedError(Exception):
    def __init__(self, message: str):
        super().__init__(message)


class QuoteImageGenerator(StabilityInference):
    def __init__(self, api_key: str, verbose: bool, engine: str, width: int, height: int, image_save_folder: str):
        super().__init__(key=api_key, verbose=verbose, engine=engine)
        self.image_file_path: None | str = None
        self.image: None | PILImage = None
        self.width = width
        self.height = height
        self.image_save_folder = image_save_folder

    def generate_image(self, prompt: str) -> None:
        seed = int(time.time())
        answers = self.generate(prompt=prompt,
                                seed=seed,
                                width=self.width,
                                height=self.height,
                                steps=50,
                                cfg_scale=8.0,
                                samples=1,
                                sampler=generation.SAMPLER_K_DPMPP_2M)
        for resp in answers:
            for artifact in resp.artifacts:
                if artifact.finish_reason == generation.FILTER:
                    raise AdultContentGenerationError(
                        'The content generated by Stability AI triggered the adult safety warning')
                if artifact.type == generation.ARTIFACT_IMAGE:
                    generated_image = Image.open(io.BytesIO(artifact.binary))
                    self.image = generated_image
                    break

        if self.image is not None:
            self.image_file_path = os.path.join(
                self.image_save_folder, f'{seed}.png')

    def save_image(self) -> str:
        if self.image is None or self.image_save_folder is None:
            raise NoImageGeneratedError(
                'There has been no image generated by Stability AI yet, call generate_image first')

        if not os.path.exists(self.image_save_folder):
            os.mkdir(self.image_save_folder)

        self.image.save(self.image_file_path)

        image_abs_file_path = os.path.abspath(self.image_file_path)
        return image_abs_file_path
